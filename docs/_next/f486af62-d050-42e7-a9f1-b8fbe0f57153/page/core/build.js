
          window.__NEXT_REGISTER_PAGE('/core/build', function() {
            var comp = module.exports=webpackJsonp([25],{1262:function(e,n,s){e.exports=s(1263)},1263:function(e,n,s){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=s(1),l=function(e){return e&&e.__esModule?e:{default:e}}(o),t=s(5);n.default=(0,t.withServerProps)(function(e){return l.default.createElement(t.Chrome,null,l.default.createElement(t.Content,{title:"Core Build"},l.default.createElement(t.PageHeading,null,"Core CSS Build Config"),l.default.createElement(t.Doc,null,"\n## PostCSS Config\n\nTo setup your own PostCSS config to consume the CSSNext variables, you'll want install the needed dependencies for PostCSS:\n\n```bash\nnpm install postcss-import postcss-cssnext\n```\n\nThen adjust your `postcss.config.js` to include those plugins:\n\n```bash\nmodule.exports = {\n  plugins: {\n    'postcss-import': {},\n    'postcss-cssnext': { browsers: ['Last 2 versions', 'IE >= 10'] }\n  }\n}\n```\n\nIf you use Webpack for loading CSS, you'll also need to install your loaders:\n\n```bash\nnpm install style-loader css-loader postcss-loader\n```\n\nAnd add a `module.rule` to your `webpack.config.js`:\n\n```js\nmodule: {\n  rules: [\n    {\n      test: /\\.module\\.css$/,\n      include: [require('path').resolve(path.join('node_modules', '@pluralsight', 'ps-design-system-core'))],\n      use: ['style-loader', 'css-loader', 'postcss-loader']\n    }\n  ]\n}\n```\n\n\n## Sass Config\n\nSass variables are available, generated from the source variables.  To use Sass, installed the required build tools, such as:\n\n```bash\nnpm install node-sass\n```\n\nIf you use Webpack for loading CSS, you'll also need to install your loaders:\n\n```bash\nnpm install style-loader css-loader sass-loader\n```\n\nAnd add a `module.rule` to your `webpack.config.js`:\n\n```js\nmodule: {\n  rules: [\n    {\n      test: /\\.module\\.css$/,\n      include: [require('path').resolve(path.join('node_modules', '@pluralsight', 'ps-design-system-core'))],\n      use: ['style-loader', 'css-loader', 'sass-loader']\n    }\n  ]\n}\n```\n\n## Import Vanilla CSS\n\nVanilla CSS utility classes are available, generated from the source variables.  Use of these utility classes is not recommended for most applications.\n\nThe up side is that no build is technically necessary.\n\n## Config Examples\n\nSee the [examples on github](https://github.com/pluralsight/design-system/tree/master/examples/) for config in project context.\n\nSee the [core usage docs](/core/usage) for usage syntax details.\n")))})}},[1262]);
            return { page: comp.default }
          })
        