
          window.__NEXT_REGISTER_PAGE('/install', function() {
            var comp = module.exports=webpackJsonp([20],{1278:function(e,n,t){e.exports=t(1279)},1279:function(e,n,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}var o=t(1),a=function(e){return e&&e.__esModule?e:{default:e}}(o);Object.defineProperty(n,"__esModule",{value:!0});var l=t(129),r=s(l),i=t(0),u=(s(i),t(5));n.default=(0,u.withServerProps)(function(e){return a.default.createElement(u.Chrome,null,a.default.createElement(u.Content,{title:"Install"},a.default.createElement(u.PageHeading,null,"Install FTW!"),a.default.createElement(u.Doc,null,"\n## Normalize\n\nUse of the Core or Components requires the existence of the Design System normalize stylesheet on the page.  Install with:\n\n```bash\nnpm install @pluralsight/ps-design-system-normalize\n```\n\nInclude this vanilla CSS in your application in a method appropriate for your project. For usage options, follow the [Core Usage docs](/core/usage) patterns.\n\n## Use Core\n\n### Step 1: Install Core\n\nFirst install the dependency:\n\n```bash\nnpm install @pluralsight/ps-design-system-core\n```\n\nCore design elements are not Components.  Rather they are represented as a set of variables.\n\n### Step 2: Configure Core\n\nIf you write your CSS in JavaScript, no additional configuration is required.  Otherwise choose how to integrate the Core variables into your CSS build process.  We recommend using PostCSS.\n\nInstall any required plugins you don't have yet for PostCSS:\n\n```bash\nnpm install postcss-cssnext postcss-import\n```\n\nAdjust your `postcss.config.js` to include the required plugins:\n\n```bash\nmodule.exports = {\n  plugins: {\n    'postcss-import': {},\n    'postcss-cssnext': { browsers: ['Last 2 versions', 'IE >= 10'] }\n  }\n}\n```\n\n"),a.default.createElement(u.P,null,a.default.createElement(r.default,{color:r.default.colors.yellow},"Important")," See the"," ",a.default.createElement(u.TextLink,{href:"/core/build"},"CSS Build docs")," for other CSS tech config options if the above doesn't apply."),a.default.createElement(u.Doc,null,"\n\nFor usage details, see the [Core Usage docs](/core/usage).\n\n## Use Components\n\nMost components use [glamorous](https://github.com/paypal/glamorous), which has a peerDependency on [glamor](https://github.com/threepointone/glamor).  It needs to be installed exactly once per application that uses these components:\n\n```bash\nnpm install glamor\n```\n\nEach component is installed separately.  The JavaScript is prebuilt Node modules.  Assets are inlined.  Find and use what you need.  For example:\n\n```bash\nnpm install @pluralsight/ps-design-system-button\n```\n\nSee individual reference pages for usage examples.\n\nFor full, working project examples, see [github](https://github.com/pluralsight/design-system/tree/master/examples).\n")))})}},[1278]);
            return { page: comp.default }
          })
        